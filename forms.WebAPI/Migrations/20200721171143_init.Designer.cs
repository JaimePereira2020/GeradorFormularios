// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using forms.WebAPI.Data;

namespace forms.WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200721171143_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("forms.WebAPI.Model.Formulario", b =>
                {
                    b.Property<int>("FormularioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreatorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("status")
                        .HasColumnType("TEXT");

                    b.Property<string>("theme")
                        .HasColumnType("TEXT");

                    b.Property<string>("version")
                        .HasColumnType("TEXT");

                    b.HasKey("FormularioID");

                    b.ToTable("Formulario");
                });

            modelBuilder.Entity("forms.WebAPI.Model.Matrix", b =>
                {
                    b.Property<int>("MatrixID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FormularioID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("descriptionMatrix")
                        .HasColumnType("TEXT");

                    b.Property<int>("positionMatrix")
                        .HasColumnType("INTEGER");

                    b.Property<string>("possibilityAnswerMatrix")
                        .HasColumnType("TEXT");

                    b.HasKey("MatrixID");

                    b.HasIndex("FormularioID");

                    b.ToTable("Matrix");
                });

            modelBuilder.Entity("forms.WebAPI.Model.PossibilityAnswer", b =>
                {
                    b.Property<int>("PossibilityAnswerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FormularioID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MatrixID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("descriptionValuePossibilityAnswer")
                        .HasColumnType("TEXT");

                    b.Property<int?>("questionID")
                        .HasColumnType("INTEGER");

                    b.HasKey("PossibilityAnswerID");

                    b.HasIndex("FormularioID");

                    b.HasIndex("MatrixID");

                    b.HasIndex("questionID");

                    b.ToTable("PossibilityAnswer");
                });

            modelBuilder.Entity("forms.WebAPI.Model.Question", b =>
                {
                    b.Property<int>("questionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FormularioID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MatrixID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("answerDependency")
                        .HasColumnType("TEXT");

                    b.Property<string>("className")
                        .HasColumnType("TEXT");

                    b.Property<string>("condiction")
                        .HasColumnType("TEXT");

                    b.Property<string>("descriptionValueQuetion")
                        .HasColumnType("TEXT");

                    b.Property<string>("erroText")
                        .HasColumnType("TEXT");

                    b.Property<bool>("flagDependency")
                        .HasColumnType("INTEGER");

                    b.Property<string>("help")
                        .HasColumnType("TEXT");

                    b.Property<string>("icon")
                        .HasColumnType("TEXT");

                    b.Property<string>("label")
                        .HasColumnType("TEXT");

                    b.Property<string>("placeHolder")
                        .HasColumnType("TEXT");

                    b.Property<string>("positionQuetion")
                        .HasColumnType("TEXT");

                    b.Property<string>("quetionDependency")
                        .HasColumnType("TEXT");

                    b.Property<string>("regex")
                        .HasColumnType("TEXT");

                    b.Property<string>("subType")
                        .HasColumnType("TEXT");

                    b.Property<string>("type")
                        .HasColumnType("TEXT");

                    b.HasKey("questionID");

                    b.HasIndex("FormularioID");

                    b.HasIndex("MatrixID");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("forms.WebAPI.Model.Matrix", b =>
                {
                    b.HasOne("forms.WebAPI.Model.Formulario", "Formulario")
                        .WithMany()
                        .HasForeignKey("FormularioID");
                });

            modelBuilder.Entity("forms.WebAPI.Model.PossibilityAnswer", b =>
                {
                    b.HasOne("forms.WebAPI.Model.Formulario", "Formulario")
                        .WithMany()
                        .HasForeignKey("FormularioID");

                    b.HasOne("forms.WebAPI.Model.Matrix", "Matrix")
                        .WithMany()
                        .HasForeignKey("MatrixID");

                    b.HasOne("forms.WebAPI.Model.Question", "Question")
                        .WithMany()
                        .HasForeignKey("questionID");
                });

            modelBuilder.Entity("forms.WebAPI.Model.Question", b =>
                {
                    b.HasOne("forms.WebAPI.Model.Formulario", "Formulario")
                        .WithMany()
                        .HasForeignKey("FormularioID");

                    b.HasOne("forms.WebAPI.Model.Matrix", "Matrix")
                        .WithMany()
                        .HasForeignKey("MatrixID");
                });
#pragma warning restore 612, 618
        }
    }
}
